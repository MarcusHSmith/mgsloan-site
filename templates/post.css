*
{
  margin: 0;
  padding: 0;
}

code, em, strong
{
  line-height: 1;
}

html
{
  font-size: 16px;
}

body
{
  background-color: #fffef8;
  border-top: 0.7em solid #c36;
  color: #456;
  font-family: Calluna Sans, sans-serif;
  /* Firefox applies ligatures automatically when they are available, but Chrome
   * needs to be told explicitly. Note: Blink will drop the -webkit prefix soon.
   * See https://crbug.com/537293. */
  -webkit-font-feature-settings: 'liga', 'kern';
  font-feature-settings: 'liga', 'kern';
  line-height: 1.4em;
}

article, #teaser, #footer
{
  padding: 1.4em;
  margin-left: auto;
  margin-right: auto;
}

article
{
  padding-top: 0;
}

header
{
  font-family: Calluna, serif;
  margin-left: 1em;
  margin-right: 1em;
  text-align: center;
}

header > h1
{
  /* Align the header on the third baseline. (The first baseline is at the
   * bottom of the top border of the body.) Ensure that the bottom margin
   * aligns with the grid. */
  color: #000;
  font-size: 2.8em;
  line-height: 2.8rem;
  margin-bottom: 0.7rem;
  padding-top: 2.8rem;
}

header > h2
{
  -webkit-font-feature-settings: 'dlig';
  font-feature-settings: 'dlig';
  font-size: 1.4em;
  font-style: italic;
  font-weight: normal;
  line-height: 1.4rem;
  margin-bottom: 1.0rem;
  padding-top: 0.4rem;
}

header > p
{
  color: #c36;
  padding-top: 0.5em;
  padding-bottom: 0.9em;
  margin-bottom: 0;
}

/* The headings may contain manually inserted line breaks for a more balanced
 * break, but these are intended for full-width pages only. Ignore them for
 * narrow viewports. */
header > h1 > br
{
  display: none;
}

p
{
  margin-bottom: 1em;
  padding-top: 0.4em;
}

a
{
  color: #c36;
  text-decoration: none;
}

abbr, .smcp
{
  /* Use the caps-to-small-caps opentype feature, instead of 'smcp' (or even
   * font-variant: small-caps) in combination with text-transform: lowercase.
   * This allows for graceful fallback: if font feature settings are not
   * supported, all caps will be shown. */
  /* TODO: Remove prefixed version once Blink drops the prefix. */
  -webkit-font-feature-settings: 'c2sc';
  font-feature-settings: 'c2sc';
  text-transform: uppercase;

  /* Note: this breaks small caps in Blink. Enable once
   * https://crrev.com/1416603005 goes mainstream, or live with the non-small
   * caps? */
  letter-spacing: 0.1em;
}

abbr
{
  /* The generous letter spacing for small caps is great as a stylistic feature,
   * but it is too much in the body text. */
  letter-spacing: 0.03em;

  /* Compensate for the extra space at the end. */
  margin-right: -0.03em;
}

.run-in
{
  /* Use the 'smcp' feature instead of font-variant: small-caps, because not all
   * browsers will select the true small-caps with font-variant. For the run-in
   * it is fine if the fallback is to do nothing special at all. */
  /* TODO: Remove prefixed version once Blink drops the prefix. */
  -webkit-font-feature-settings: 'smcp';
  font-feature-settings: 'smcp';

  /* Use a bit more modest letter spacing here than for .smcp. */
  letter-spacing: 0.05em;
}

h2
{
  font-family: Calluna, serif;
  font-size: 1.4em;
  line-height: 1em;
  margin-bottom: 0.2rem;
  padding-top: 1.2rem;
}

article > ul, article > ol
{
  counter-reset: ol;
  list-style: none;
  margin-bottom: 1em;
  padding-top: 0.4em;
}

article li:before
{
  color: #c36;
  display: inline-block;
  margin-left: -1em;
  width: 1em;
}

article > ul > li:before
{
  content: '•';
}

article > ol > li:before
{
  content: counter(ol, decimal);
  counter-increment: ol;
  font-weight: bold;
}

article li
{
  margin-left: 1em;
}

table
{
  border-spacing: 0;
  margin-bottom: 1em;
}

th
{
  padding-top: 0.4em;
}

th, td
{
  padding-right: 1.4em;
  vertical-align: top;
}

code
{
  color: #c36;
  font-family: Inconsolata, Consolas, monospace;
}

div.sourceCode
{
  /* Hang the border left of the pre in the margin. */
  /* TODO: How do I handle this when there is no div? */
  margin-left: -0.25em;
  overflow: hidden;
}

pre
{
  /* The top and bottom of the block are not baseline-aligned, but the space
   * between the top and the text baseline and between the bottom and the
   * x-height is both 1.6em. The code baseline is offset from the regular
   * baseline by 0.7em (half a line height). */
  background-color: #eee;
  border-left: 0.25rem solid #c36;
  margin-bottom: 0.6rem;
  margin-top: 0.2rem;
  overflow-x: auto;
  padding: 1rem;
  padding-left: 1.4rem;
  padding-right: 1.4rem;

  /* Use a slightly smaller font size for code blocks, because matching the
   * x-height to the body font makes the code look too big. Do keep the same
   * line height to ensure proper baseline alignment. */
  font-size: 0.9em;
  line-height: 1.4rem;
}

code.sourceCode
{
  color: #456;
}

/* Syntax highlighting colors, adapted from the default prism.js theme. */
.kw           { color: #07a; } /* Keyword */
.dt           { color: #d56; } /* Data type, function */
.fu           { color: #690; } /* Function */
.dv, .bn, .fl { color: #905; } /* Decimal, base N, float */
.ch, .st      { color: #e90; } /* Character, string */
.co           { color: #789; } /* Comment */

#teaser-section
{
  background-color: #c36;
  color: #f5b2c8;
}

#teaser
{
  padding-bottom: 0.7em;
}

#teaser p:first-child {
  margin-bottom: 0.3em;
}

#teaser a {
  color: #fff; /* TODO: Pick good colour scheme. */
  font-family: Calluna, serif;
  /* For reasons unknown to me, this fixes the baseline alignment of the teaser
   * paragraph in Firefox. The value has been found by trial and error. */
  line-height: 1.25;
}

#teaser a:after
{
  /* U+00a0 is a non-breaking space. */
  color: #fff;
  content: '\a0»';
}

#teaser > h2
{
  margin-bottom: 0.2rem;
  padding-top: 0.5rem; /* Same vertical alignment as article h2. */
}

footer
{
  background-color: #234; /* TODO: pick unified colour scheme. */
  color: #b4aaaa;
}

footer ul
{
  list-style: none;
  margin-bottom: 2.4em;
  padding-top: 0.4em;
}

#notices
{
  text-align: center;
}

footer span
{
  margin-left: 0.25em;
  margin-right: 0.25em;
}

/* TODO: disable this when the viewport width allows. */
#breakdot
{
  display: block;
  height: 0;
  overflow: hidden;
  width: 0;
}

/* Scale text size as the cube root of the screen width.
 *
 *   min-with = 500 * (font-size / 19)^3
 */

@media(min-width: 425px)
{
  html { font-size: 18px; }

  header
  {
    margin-left: 1.4em;
    margin-right: 1.4em;
  }
}

@media(min-width: 583px)
{
  html { font-size: 20px; }

  article, #teaser, #footer
  {
    padding-left: 2em;
    padding-right: 2em;
  }

  header
  {
    margin-left: 2em;
    margin-right: 2em;
  }
}

@media(min-width: 776px)
{
  html { font-size: 22px; }

  article, #teaser, #footer
  {
    /* By limiting the width to 37em (31.4 minus padding),
     * there are on average 87 characters per line. */
    max-width: 37em;
    padding-left: 2.8em;
    padding-right: 2.8em;
  }

  header
  {
    margin-top: 1.4em;
    margin-bottom: 1.4em;
  }

  /* At this width, headings have been line-wrapped manually for a more balanced
   * result than what the browser would do. */
  header > h1 > br
  {
    display: block;
  }

  /* Hang list numbers and bullets in the margin when there is enough space. */
  article li
  {
    margin-left: 0;
  }
}

@media(min-width: 1008px)
{
  html { font-size: 24px; }

  /* Align source code with text and pull borders into the margin, if there is
   * space. TODO: How to handle this when there is no extra div? */
  div.sourceCode
  {
    margin-left: -1.65em;
    margin-right: -1.4em;
  }
}

@media(min-width: 1281px)
{
  html { font-size: 26px; }
}

/* TODO: Test this on larger screens. */
